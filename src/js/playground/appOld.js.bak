import React from "react";
import ReactDOM from "react-dom";

class IndecisionApp extends React.Component {
  title = 'Indecision App';
  subtitle = 'Put your life in the hands of a computer';

  constructor(props) {
    super(props);
    this.state = {
      options: props.options,
      pickedOption: '',
    };

    this.removeAll = this.removeAll.bind(this);
    this.addOption = this.addOption.bind(this);
    this.pickOption = this.pickOption.bind(this);
    this.removeOption = this.removeOption.bind(this);
  }

  componentDidMount() {
    const options = JSON.parse(localStorage.getItem('options'));
    if (!options) return;
    this.setState({options});
  }

  componentDidUpdate() {
    localStorage.setItem('options', JSON.stringify(this.state.options));
  }

  removeAll() {
    this.setState({options: []});
  }

  removeOption(option) {
    this.setState(prevState => ({
      options: prevState.options.filter(o => o !== option),
    }));
  }

  addOption(option) {
    if (!option) return 'Enter valid value to add item';
    if (this.state.options.indexOf(option) > -1)
      return 'This option already exists';
    this.setState(prevState => ({
      options: [...prevState.options, option],
    }));
  }

  pickOption() {
    const index = Math.floor(Math.random() * this.state.options.length);
    this.setState({pickedOption: this.state.options[index]});
  }

  render() {
    return (
      <div>
        <Header subtitle={this.subtitle}/>
        <Action
          hasOptions={this.state.options.length > 0}
          pickOption={this.pickOption}
          pickedOption={this.state.pickedOption}
        />
        <Options
          options={this.state.options}
          removeAll={this.removeAll}
          removeOption={this.removeOption}
        />
        <AddOption addOption={this.addOption}/>
      </div>
    );
  }
}

IndecisionApp.defaultProps = {
  options: [],
};

const Header = props => (
  <div>
    <h1>{props.title}</h1>
    {props.subtitle && <h2>{props.subtitle}</h2>}
  </div>
);

Header.defaultProps = {title: 'Indecision App'};

const Action = props => (
  <div>
    <button onClick={props.pickOption} disabled={!props.hasOptions}>
      What should I do?
    </button>
    {props.pickedOption && <p>{props.pickedOption}</p>}
  </div>
);

const Options = props => (
  <div>
    <button onClick={props.removeAll}>Remove all</button>
    {props.options.map((option, i) => (
      <Option key={i} text={option} removeOption={props.removeOption}/>
    ))}
  </div>
);

const Option = props => {
  const removeOption = () => props.removeOption(props.text);
  return (
    <div>
      {props.text}
      <button onClick={removeOption}>Delete</button>
    </div>
  );
};

class AddOption extends React.Component {
  constructor(props) {
    super(props);
    this.state = {error: undefined};
    this.handleAddOption = this.handleAddOption.bind(this);
  }

  handleAddOption(e) {
    e.preventDefault();
    const option = e.target.elements['option'].value.trim();
    e.target.elements['option'].value = '';
    const error = this.props.addOption(option);
    if (!error) return this.setState({error: undefined});
    this.setState({error});
  }

  render() {
    return (
      <div>
        {this.state.error && <p>{this.state.error}</p>}
        <form onSubmit={this.handleAddOption}>
          <input type="text" name="option"/>
          <button>Add option</button>
        </form>
      </div>
    );
  }
}

ReactDOM.render(<IndecisionApp/>, document.getElementById('app'));
